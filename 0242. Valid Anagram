class Solution {
    public boolean isAnagram(String s, String t) {
        // hashtable using a fixed length array; HashMap will also work.
        if (s.length() != t.length()) return false;
        
        int[] counts = new int[26]; // 0 by default
        for (int i = 0; i < s.length(); i++) {
            counts[s.charAt(i) - 'a'] += 1;
            counts[t.charAt(i) - 'a'] -= 1;
        }
        
        for (int c: counts){
            if (c != 0) return false;
        }
        
        return true;
        
        

        //WRONG WAY, java hashmap doesn't work this way, can't wolk through the whole table at the end. 
//         HashMap<Charactor, Integer> table = new HashMap<>();
        
//         for (char c: s){
//             if table.contain(c) table.put(c, table.get(c) + 1);
//             else if table.put(c, 1);
//         }
        
//         for (char c: s){
//             if !table.contain(c) return false;
//             table.put(c, table.get(c) - 1);
//         }
        
//         go through, if not 0, return false
//             else return true
    }        
}
