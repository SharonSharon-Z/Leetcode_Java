/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode p1 = l1;
        ListNode p2 = l2; 
        ListNode head = null; 
        ListNode cur = head;
        
        int increase = 0;
        // 
            
        while (p1 != null || p2 != null) {
            if (head == null) { // p1, p2 not null
                head = new ListNode((p1.val + p2.val) % 10 );
                cur = head;
                increase = (p1.val + p2.val) / 10;
                p1 = p1.next;
                p2 = p2.next;
            } else {
                int sum = 0;
                
                if (p1 != null) {
                    sum += p1.val;
                    p1 = p1.next;
                }
                if (p2 != null) {
                    sum += p2.val;
                    p2 = p2.next;
                }
                sum += increase;
                increase = sum / 10;

                cur.next = new ListNode(sum % 10);
                cur = cur.next;
            }
        }

        if (increase != 0) cur.next = new ListNode(increase);
        return head;  
    }
}
