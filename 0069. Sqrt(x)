class Solution {
    public int mySqrt(int x) {
        // 
//         if (x == 0){
//             return x;
//         }
        
//         int lt = 1;
//         int rt = x;
//         int mid;
//         while (lt <= rt){
//             mid = (lt + rt)/2;
//             if (mid> x/mid){
//                 rt = mid - 1;
//             } else if (mid < x/mid){
//                 lt = mid + 1;
//             } else {
//                 return mid;
//             }
//         }
//         return rt;
        
        // upper bound of binary search
        int lt = 1;
        int rt = x;
        int ans = 0;
        while (lt <= rt){
            int mid = lt + (rt-lt)/2;
            // upper bound的形式，因为我们要找的ans要是最接近于x的最大的数，利用upper bound
            if (mid <= x/mid){
                lt = mid +1;
                ans = mid;
            }
            else
                rt = mid-1;
        }
        return ans;
        
    }
}
