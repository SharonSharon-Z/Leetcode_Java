class Solution {
//     // brute force: O(n2)
//     public int maxArea(int[] height) {
//         int maxArea = 0;
//         for (int i = 0; i < height.length ; i++) {
//             for (int j = i+ 1; j < height.length ; j++) {
//                 int area = (j-i) * Math.min(height[i], height[j]);
//                 maxArea = Math.max(maxArea, area);
//             }
//         }
//         return maxArea;
//     }
    
    
    
    // out to in
    public int maxArea(int[] height) {
        int i = 0;
        int j = height.length - 1;
        int maxArea = 0;
        
        while (i < j) {
            int area = (j-i) * Math.min(height[i], height[j]);
            maxArea = Math.max(maxArea, area);
            
            if (height[i] < height[j]) {
                i++;
            } else {
                j--;
            }
        }
        return maxArea;

    }
}
